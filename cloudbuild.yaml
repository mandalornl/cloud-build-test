steps:
  - id: 'Restore'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e
        
        storage_bucket="${PROJECT_ID}.firebasestorage.app"
        storage_uri="gs://${storage_bucket}/$(sha256sum pnpm-lock.yaml | cut -d' ' -f1)"
        
        if gsutil -q stat "${storage_uri}"; then
          mkdir node_modules
          echo "--> Restoring installed packages from ${storage_uri}"
          gsutil -m rsync -r "${storage_uri}" node_modules
        fi

  - id: 'Install & Deploy'
    name: 'node:22'
    env:
      - "SHORT_SHA=${SHORT_SHA}"
      - "FIREBASE_API_KEY=${_FIREBASE_API_KEY}"
      - "FIREBASE_APP_CHECK_DEBUG=${_FIREBASE_APP_CHECK_DEBUG}"
      - "FIREBASE_APP_CHECK_SITE_KEY=${_FIREBASE_APP_CHECK_SITE_KEY}"
      - "FIREBASE_APP_ID=${_FIREBASE_APP_ID}"
      - "FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN}"
      - "FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID}"
      - "FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID}"
      - "FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET}"
    script: |
      #!/usr/bin/env bash
      set -e
      corepack enable
      pnpm install --frozen-lockfile
      npx nuxi generate
      npx firebase-tools --project=$PROJECT_ID deploy --only=hosting --non-interactive

  - id: 'Cache'
    name: 'gcr.io/cloud-builders/gsutil'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        set -e

        if [ -d node_modules ]; then        
          echo "--> Caching installed packages to ${storage_uri}"
          gsutil -m rsync -r node_modules "${storage_uri}"
        fi

timeout: 300s
options:
  logging: CLOUD_LOGGING_ONLY
